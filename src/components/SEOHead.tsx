import { useEffect } from 'react';

interface SEOHeadProps {
  title?: string;
  description?: string;
  keywords?: string;
  canonical?: string;
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  structuredData?: object;
}

export const SEOHead: React.FC<SEOHeadProps> = ({
  title,
  description,
  keywords,
  canonical,
  ogTitle,
  ogDescription,
  ogImage,
  structuredData
}) => {
  useEffect(() => {
    // Update document title
    if (title) {
      document.title = title;
    }

    // Update meta description
    if (description) {
      let metaDescription = document.querySelector('meta[name="description"]');
      if (!metaDescription) {
        metaDescription = document.createElement('meta');
        metaDescription.setAttribute('name', 'description');
        document.head.appendChild(metaDescription);
      }
      metaDescription.setAttribute('content', description);
    }

    // Update meta keywords
    if (keywords) {
      let metaKeywords = document.querySelector('meta[name="keywords"]');
      if (!metaKeywords) {
        metaKeywords = document.createElement('meta');
        metaKeywords.setAttribute('name', 'keywords');
        document.head.appendChild(metaKeywords);
      }
      metaKeywords.setAttribute('content', keywords);
    }

    // Update canonical URL
    if (canonical) {
      let canonicalLink = document.querySelector('link[rel="canonical"]');
      if (!canonicalLink) {
        canonicalLink = document.createElement('link');
        canonicalLink.setAttribute('rel', 'canonical');
        document.head.appendChild(canonicalLink);
      }
      canonicalLink.setAttribute('href', canonical);
    }

    // Update Open Graph tags
    if (ogTitle) {
      let ogTitleMeta = document.querySelector('meta[property="og:title"]');
      if (!ogTitleMeta) {
        ogTitleMeta = document.createElement('meta');
        ogTitleMeta.setAttribute('property', 'og:title');
        document.head.appendChild(ogTitleMeta);
      }
      ogTitleMeta.setAttribute('content', ogTitle);
    }

    if (ogDescription) {
      let ogDescMeta = document.querySelector('meta[property="og:description"]');
      if (!ogDescMeta) {
        ogDescMeta = document.createElement('meta');
        ogDescMeta.setAttribute('property', 'og:description');
        document.head.appendChild(ogDescMeta);
      }
      ogDescMeta.setAttribute('content', ogDescription);
    }

    if (ogImage) {
      let ogImageMeta = document.querySelector('meta[property="og:image"]');
      if (!ogImageMeta) {
        ogImageMeta = document.createElement('meta');
        ogImageMeta.setAttribute('property', 'og:image');
        document.head.appendChild(ogImageMeta);
      }
      ogImageMeta.setAttribute('content', ogImage);
    }

    // Add structured data
    if (structuredData) {
      const existingScript = document.querySelector('script[data-seo="dynamic"]');
      if (existingScript) {
        existingScript.remove();
      }

      const script = document.createElement('script');
      script.type = 'application/ld+json';
      script.setAttribute('data-seo', 'dynamic');
      script.textContent = JSON.stringify(structuredData);
      document.head.appendChild(script);
    }
  }, [title, description, keywords, canonical, ogTitle, ogDescription, ogImage, structuredData]);

  return null; // This component doesn't render anything
};

// Hook for section-specific SEO
export const useSectionSEO = (sectionId: string) => {
  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const section = entry.target;
            const sectionTitle = section.getAttribute('data-seo-title');
            const sectionDesc = section.getAttribute('data-seo-description');
            
            if (sectionTitle) {
              document.title = sectionTitle;
            }
            
            // Update URL hash without scrolling
            if (sectionId && window.location.hash !== `#${sectionId}`) {
              history.replaceState(null, '', `#${sectionId}`);
            }
          }
        });
      },
      {
        threshold: 0.5,
        rootMargin: '0px'
      }
    );

    const element = document.getElementById(sectionId);
    if (element) {
      observer.observe(element);
    }

    return () => {
      if (element) {
        observer.unobserve(element);
      }
    };
  }, [sectionId]);
};

// Section titles and descriptions for SEO
export const sectionSEOData = {
  hero: {
    title: '–£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã ‚ö° –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏ | –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ 2025',
    description: 'üèÜ –ò–∑–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å —É—Ä–∞–ª—å—Å–∫–∏–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏: –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –ø–∞–≤–∏–ª—å–æ–Ω—ã, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏. ‚úÖ –õ–∞–∑–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞ ‚úÖ –ú–æ–Ω—Ç–∞–∂ ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—è 3 –≥–æ–¥–∞'
  },
  about: {
    title: '–û –∫–æ–º–ø–∞–Ω–∏–∏ –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã - –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ',
    description: '–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã - –≤–µ–¥—É—â–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º —Å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏ –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ –∏ –£—Ä–∞–ª—å—Å–∫–æ–º —Ä–µ–≥–∏–æ–Ω–µ'
  },
  solutions: {
    title: '–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è - –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å —É—Ä–∞–ª—å—Å–∫–∏–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏',
    description: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏, –æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–µ –∫–æ–º–ø–ª–µ–∫—Å—ã, –ø–∞–≤–∏–ª—å–æ–Ω—ã –∏ –º–∞–ª—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ —É—Ä–∞–ª—å—Å–∫–∏–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏'
  },
  technology: {
    title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ - –õ–∞–∑–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞ –º–µ—Ç–∞–ª–ª–∞ –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
    description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ª–∞–∑–µ—Ä–Ω–æ–π —Ä–µ–∑–∫–∏ –º–µ—Ç–∞–ª–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º —Å —É—Ä–∞–ª—å—Å–∫–∏–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏. –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ç–æ—á–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è'
  },
  gallery: {
    title: '–ì–∞–ª–µ—Ä–µ—è –ø—Ä–æ–µ–∫—Ç–æ–≤ - –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã',
    description: '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –Ω–∞—à–∏—Ö —Ä–∞–±–æ—Ç: –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–æ—Ä–º—ã —Å –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏ –≤ –¥–Ω–µ–≤–Ω–æ–º –∏ –Ω–æ—á–Ω–æ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏'
  },
  calculator: {
    title: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ - –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ü–µ–Ω—É –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º –æ–Ω–ª–∞–π–Ω',
    description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º —Å —É—Ä–∞–ª—å—Å–∫–∏–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏. –ë—ã—Å—Ç—Ä—ã–π –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ü–µ–Ω—ã'
  },
  reviews: {
    title: '–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ - –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –æ –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã',
    description: '–û—Ç–∑—ã–≤—ã –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ –æ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º –∏ —Å–µ—Ä–≤–∏—Å–µ –∫–æ–º–ø–∞–Ω–∏–∏ –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã. –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∏ –Ω–∞–≥—Ä–∞–¥—ã'
  },
  clients: {
    title: '–ù–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã - –ü–∞—Ä—Ç–Ω–µ—Ä—ã –∫–æ–º–ø–∞–Ω–∏–∏ –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã',
    description: '–î–ª—è –∫–æ–≥–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º: —á–∞—Å—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—á–∏–∫–∏, —É–ø—Ä–∞–≤–ª—è—é—â–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≥–æ—Ä–æ–¥–æ–≤, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –±—é—Ä–æ'
  },
  contacts: {
    title: '–ö–æ–Ω—Ç–∞–∫—Ç—ã –£—Ä–∞–ª—å—Å–∫–∏–µ —É–∑–æ—Ä—ã - –ó–∞–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ',
    description: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –∑–∞–∫–∞–∑–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö —Ñ–æ—Ä–º —Å —É—Ä–∞–ª—å—Å–∫–∏–º–∏ –æ—Ä–Ω–∞–º–µ–Ω—Ç–∞–º–∏. –¢–µ–ª–µ—Ñ–æ–Ω: +7 (912) 037-01-70, email: director@a-96.ru'
  }
};